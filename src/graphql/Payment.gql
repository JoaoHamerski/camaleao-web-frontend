fragment PaymentsParts on Payment {
  id
  value
  date
  note
  confirmed_at
  is_confirmed
  created_at
}

fragment PaymentsViaParts on Via {
  id
  name
}

fragment PaymentsOrderParts on Order {
  id
  code
  name
  total_owing
  total_paid
  client {
    id
    name
    total_owing
  }
}

query GetPayments (
  $created_at: Date
  $pendencies: Boolean
) {
  payments (
    created_at: $created_at
    orderBy: [{column: CREATED_AT order: DESC}]
    pendencies: $pendencies
  ) {
    ...PaymentsParts

    order {
      ...PaymentsOrderParts
    }

    via {
      ...PaymentsViaParts
    }
  }
}

query GetPaymentsPendencies {
  paymentsPendencies {
    created_at_payment
    total
  }
}

mutation CreatePayment ($input: PaymentInput!) {
  paymentCreate (input: $input) {
    ...PaymentsParts
    order {
      ...PaymentsOrderParts
    }
    via {
      ...PaymentsViaParts
    }
  }
}

mutation UpdatePayment ($id: ID! $input: PaymentInput!) {
  paymentUpdate (id: $id input: $input) {
    ...PaymentsParts
    order {
      ...PaymentsOrderParts
    }
    via {
      ...PaymentsViaParts
    }
  }
}

mutation ConfirmPayment ($id: ID! $confirmation: Boolean!) {
  paymentConfirm (id: $id confirmation: $confirmation) {
    ...PaymentsParts
    order {
      ...PaymentsOrderParts
    }
    via {
      ...PaymentsViaParts
    }
  }
}

mutation dailyCashEntry (
  $client: DailyCashClientInput!
  $order: DailyCashOrderInput!
  $value: String!
  $via_id: ID!
) {
  dailyCashEntry (
    client: $client
    order: $order
    value: $value
    via_id: $via_id
  ) {
    id
  }
}
