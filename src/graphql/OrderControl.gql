#import "./_PaginatorFragment.gql"

fragment OrdersBySectorParts on Order {
  id
  code
  name
  price
  art_paths
  created_at
  delivery_date
  states
  total_owing
  concluded_status {
    id
    text
    pivot {
      user {
        id
        name
      }

      is_auto_concluded
      created_at
    }
  }

  status {
    id
    text
  }

  client {
    id
    name
  }
}

query GetAuthUserSectors {
  authUserSectors {
    orders_count
    sector {
      id
      name
      can_close_sector_orders
      status {
        id
        text
      }
    }
    next_status {
      id
      text
    }
  }
}

query GetOrdersBySector(
  $sectorId: ID!
  $first: Int!
  $page: Int
  $order_by: [QueryOrdersBySectorOrderByOrderByClause!]
) {
  ordersBySector(
    sector_id: $sectorId
    first: $first
    page: $page
    order_by: $order_by
  ) {
    paginatorInfo {
      ...PaginatorSimpleParts
    }

    data {
      ...OrdersBySectorParts
    }
  }
}

fragment PiecesDayParts on SectorPiecesCurrentPrevious {
  current_orders(first: $first, page: $page) {
    paginatorInfo {
      ...PaginatorSimpleParts
    }

    data {
      id
      code
      quantity
      client {
        id
      }
    }
  }

  current
  previous
}

query GetSectorsPieces($first: Int!, $page: Int) {
  sectorsPieces {
    sector {
      id
      name
      alias
    }

    pieces {
      day {
        ...PiecesDayParts
      }
      week {
        ...PiecesDayParts
      }
      month {
        ...PiecesDayParts
      }
    }
  }
}

mutation StepToStatus($orderId: ID!, $statusId: ID!) {
  stepToStatus(order_id: $orderId, status_id: $statusId) {
    ...OrdersBySectorParts
  }
}

mutation GetDuplicatedEntries($bank_uids: [String!]!) {
  bankCheckDuplicatedEntries(bank_uid: $bank_uids)
}
